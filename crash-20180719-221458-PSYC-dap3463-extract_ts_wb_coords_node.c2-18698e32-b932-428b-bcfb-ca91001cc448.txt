Node: Meta_wf_002.wb_functional_connectometry_002.extract_ts_wb_coords_node
Working directory: /var/folders/dk/9n8ng3n93q95kvx0zppcdtlh0000gp/T/tmpssdkf54b/Meta_wf_002/wb_functional_connectometry_002/_atlas_select_None_parlistfile_None/extract_ts_wb_coords_node

Node inputs:

ID = 002
conf = None
coords = None
dir_path = None
func_file = /Users/PSYC-dap3463/Downloads/002/002.nii.gz
function_str = def extract_ts_coords(node_size, conf, func_file, coords, dir_path, ID, mask, network, fast=False):
    from nilearn import input_data
    from pynets.graphestimation import extract_ts_coords_fast
    from pynets import utils
    from sklearn.externals.joblib import Memory

    if fast is True:
        ts_within_nodes = extract_ts_coords_fast(node_size, conf, func_file, coords, dir_path)
    else:
        spheres_masker = input_data.NiftiSpheresMasker(seeds=coords, radius=float(node_size), allow_overlap=True,
                                                       standardize=True, verbose=1,
                                                       memory=Memory(cachedir="%s%s%s" % (dir_path,
                                                                                          '/SpheresMasker_cache_',
                                                                                          str(ID)), verbose=2),
                                                       memory_level=1)
        # spheres_masker = input_data.NiftiSpheresMasker(seeds=coords, radius=float(node_size), allow_overlap=True,
        #                                                standardize=True, verbose=1)
        ts_within_nodes = spheres_masker.fit_transform(func_file, confounds=conf)

    print("%s%s%d%s" % ('\nTime series has {0} samples'.format(ts_within_nodes.shape[0]), ' and ', len(coords),
                        ' coordinate ROI\'s'))
    print("%s%s%s" % ('Using node radius: ', node_size, ' mm\n'))
    # Save time series as txt file
    utils.save_ts_to_file(mask, network, ID, dir_path, ts_within_nodes)
    return ts_within_nodes, node_size

mask = None
network = None
node_size = 2
thr = 0.09

Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/nipype/pipeline/plugins/multiproc.py", line 69, in run_node
    result['result'] = node.run(updatehash=updatehash)
  File "/usr/local/lib/python3.6/site-packages/nipype/pipeline/engine/nodes.py", line 480, in run
    result = self._run_interface(execute=True)
  File "/usr/local/lib/python3.6/site-packages/nipype/pipeline/engine/nodes.py", line 564, in _run_interface
    return self._run_command(execute)
  File "/usr/local/lib/python3.6/site-packages/nipype/pipeline/engine/nodes.py", line 644, in _run_command
    result = self._interface.run(cwd=outdir)
  File "/usr/local/lib/python3.6/site-packages/nipype/interfaces/base/core.py", line 521, in run
    runtime = self._run_interface(runtime)
  File "/usr/local/lib/python3.6/site-packages/nipype/interfaces/utility/wrappers.py", line 144, in _run_interface
    out = function_handle(**args)
  File "<string>", line 18, in extract_ts_coords
  File "/usr/local/lib/python3.6/site-packages/nilearn/input_data/nifti_spheres_masker.py", line 276, in fit_transform
    return self.fit().transform(imgs, confounds=confounds)
  File "/usr/local/lib/python3.6/site-packages/nilearn/input_data/nifti_spheres_masker.py", line 248, in fit
    type(self.seeds))
TypeError: must be str, not type
